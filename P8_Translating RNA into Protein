{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "4e611e65-5e81-4a1f-9ca1-96a6ddebf20c",
   "metadata": {},
   "source": [
    "Problem\r\n",
    "The 20 commonly occurring amino acids are abbreviated by using 20 letters from the English alphabet (all letters except for B, J, O, U, X, and Z). Protein strings are constructed from these 20 symbols. Henceforth, the term genetic string will incorporate protein strings along with DNA strings and RNA strings.\r\n",
    "\r\n",
    "The RNA codon table dictates the details regarding the encoding of specific codons into the amino acid alphabet.\r\n",
    "\r\n",
    "Given: An RNA string s\r\n",
    " corresponding to a strand of mRNA (of length at most 10 kbp).\r\n",
    "\r\n",
    "Return: The protein string encoded by s\r\n",
    "."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e4fb1d1c-c90c-4811-8aa3-9b40ab8dd739",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "What is the RNA Strand? AUG\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "AUG\n"
     ]
    }
   ],
   "source": [
    "\n",
    "   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ec36f4b6-5cf0-4635-91dd-f0dff2221dcc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "What is the Strand? AUGGAUUCCCCAAUGUGUGCCCCUCUUGGCUAUGUAUAUAGGUCUGAGGCCCAGAUUCCGACAAACGCCAGUACUGCUGAGUCGUACCCUAGUUUUAGCUAUGUGAGGUGUGCAGUGGUAUGCGUGAGUGCCUCGCGCAAUAAUUGCACGCUAAUUCGGCUUAACUGUGAAGGGACGAUGGUGCUCAAUGUCCGUAAGCUAAUAAUUGAUUCUCCCCUCAAUGUCGCACCUAACAGAGAACCGACGGGAAGUACGUGCUUCGCAUGGCUAAGUAUGAGAACUGUCCGAGAGUACCAUACCGACUGUAUAUCCCAUGAGUGCAGCUCCUCGGGAUAUCUGACACGCGCCGUGCUCCCGGCUAUUGGCACUUUCUUACGUAUAGCUGUACCGCAUCGCUGGGAAGUCUUUUUUACGAAUGGUGGAAUGGCUCAGCGAGCGACGUUUAGCCUAUACCAAAUUUCUAGUAAGCCUCUACCAGACACUCACUGCGCCGUUCCACGGUACGGGCGUACCAACUUGCUUAUUUAUGUAACUCUGAAUGUGGGUACUAUAAUCCCGGUCAAUUACAUGCCACUCCUACUCAUGGAGGAUUUCCCGGGUCAGGGGUUGAGAUCUGACUGGAGGAGCCUUCCAGUUGUACAACGAGAAAGAGCGGCACUUCACGUGAAUUGGGGUAAUAGUCAUGUAAUCUUAAGACGCCGCAACAUAAGUGCCGUAGUGGGUGAUUUAUUUUUCUGCAUCCGGAUGAAGAAUGUGAACGUGAAACACUUUCGCGCAUCUCCUCGGUUCAACUCGCAUCAGGUUAUAAUCAGUGGGGACGAAGACAUGACCAAGUUGUGUCCAAGAUGUGCGUAUUGUGCGACUAAACACUUGGCCUACUUAGGGUUCACCACAUGCCCGUUAGUCAAUGGCUUGAGGACCACCGAAUUCCUCUCUCCUGGGAGAAAUAGGCCAACUUUCAUGCGUUGUCUAAAGGGCCGCGUUAUAUCUGCAAAUGGCGCUCCUGGGUGCAAGUCACGCCUGACCCUGCGACGGAACAGGCUUGUUAGGAUCGAGCAGGAACCAAAGCCGGAUUCCUGCCCGCAGCACGGUCGCUGUGGGAACGAUCAGACCCAACCAAGGACAAUGACGCCCAAGAGUCCUCCAUCCCCAACACUGAGGGCUCGGCGCAGUGUCAAGUUAUGCGGGUACGGCGGCCCGGGCUCGAUACGACGCGAUUCCGGCAUAUACGAACAUCCGGCAUGCUGGGCACAUUUUAUAGGCGUUUUUAAGCUCCAACAUACUCCGUUCGGGCGGAGGGAAACACUGGCGCGCAAAGGGGCCCAACCGGGUACGGAAUUAACCAAAUGCUCAGCGUUGCGUGUGGGAUAUCGUCAUCGGUCCCCUUGCGGGAAUGUGUUCGACCCUUUUGGCCGACCUCAACACCUUUUGUAUAGAUCCAGCGAAUGGCAUGCUGCUAUGUCGUAUUUUUUGCCACUGCCUACACCAGGUCUCCGCAGUACCGCCGGAGCACCCCGACUGAGGGACACUCGGACGAUAGAUAAAGUGCUUCUUUGCAUGGCAGAGCAUCUGUAUCCAGCCUGGGGCAGACCUUCGCGGUGGUCCACCCCGCCGAAAAGCAGAUUCAGGCACGGUCUAGCGUCACCGCGUAUGCCCUUACUCGGGUACGGUCGACUUACAGAGAUGACGAAUGACGCAGUCGCACUGGUUAGCGUGUCGACUUGCCGGGAUUGGAGCAGUGCUCGCCUAGGAGGUAGCUUUUAUUGGAACGCUCGGCCCCCGAGUGCCAGAUCGGGAACUAACCCAAACGAUCUGGAGUUGAGCGGGUUGUCGGGGACAUACGAAUCGUCCCCCGGAUGCAACUCCGUUGGAAAGUGGAAGUUCUUUCGCGCGCUGGGAGCUUUUCGUCAGAUAAUGCAUACGAAUGGUCUAAAAGGAUCGUUGAUUAGAGGGCCGAAAACUAUCUGCGUGGAGUGUCAUGUGUCCGGACUUGCUAGAACGUACCGGCUAUCCUCUGGCUGUACGAGAAAAGAGGGCAUGUUGUCCUGUAAGGAAUUUCCAUUCUGGUAUAUAGUUGUUAUUAGGUUUAACCUGUUUUGGCUGCUCGUUAUACUGCCGCCAUACUUCCAUACGGUAACCACGUCUUAUAUCCGCAGACAACUUCGAUUGGCGAUGGCCUGGCCUGAGACCUUGGUAAUGGGGCACGCGUUUGUAGUAACGUCUGCCAAGAAGUAUAUGGGUGGCCGGCUCCUCGCUAUUAUCGGACUACGCUCGUCCUUAGGCAGGUGCUCUGGCGAAGCAAAGAUGGCACUCCCACAGAGACGAGAAAUCCCGUCAUCUUAUUCCUCUUCGGGUCAAUGCUGGCUUACUGCGAGACGCCACGCUGUAGAUGGGAUUCCAGCCGUUGAUAGUCGUUGUCUGCGAUCGUGCCUGCGGCUUAAGACCCUGCGUUCACAACGGUUCGAUGACAUCCAGUGCGUUUUCAGGUAUGCAGCUAAAAUGCAAGAACUUCGCUGUUGGCUCCACUCGGGUUCCCGAGCUAUUUUUGUUUAUUCCCCAGCGGCAGGGGUUGGCUUGCACUCUGUAGUACGAUAUCCGGACACGAUAUUGAUGCAAUUAAGCCAUCCGUCGCCGCUGGUGGUAAUUUCAAUUCGGCGCAAAGCAACGAUGUCUCCACGCAAUGCUCCGGGCAAGCCCACUUUAGGCGUGUUGCUGGCAAGAUGCGAGGACAAGUGCCAUCAACGUGGGGAGGGGGACCUUACCGUUGCCUUCUUGAGUUUCCUGAGCCAUGCUCAGAGUGCUAACGGAUUCUGGCAGCAGGGAUUAGCAAGCAACAGCGGGGGGGUAAGUAUCCAGUCUCAUUAUGUAGUGCGUACUAUCGAGCUUUACCUUCUUACAGACUCUACCACGACCUGUUGCAGGUUCUGGAAUUUCACACGGCCUGUCUCUACUCAGCCAGGGAAAACCGAAAUAUCACCCAGACAUGCUAGACCAAGUCUACUCAUAUGGGGCCAAAGUCUGCUAGGACUCCCUCACCCACUGGAGCGUCUUUUCGACACUCUCGAUCUGCGCUAUAACCGCGCGACGCAAACCCCGCGAGGUGGGUGCAUGCUUGUGGCAGGCAUCUGCCCGACUCGCGUCUUCAAGGGAUUACGCCAAAACGCAGAGUCAUUCAAUUGUUUCAAGAUACAGUUCAUAGCCUUUGGCCAUGAUUUAACAGCUACCAACUGCUCACGCCAGGCUCGCCUCAGCGCGUGGCUAAGAGCGCGCACUGUAUCCUCAAAUAGCAUUGUGGGGAACCGGUGCAUAGGUGCGGUGAGAAAUCGGCCAGUCUACGAAUGGUGUCGAAAUCCAUCUAUUAAUCCUCGGAUGACAAUACGUGUGACAUCCCGCGCUUGCACAAUUGGAAACGGCGUGAAGCUUCAUUUGUAUGCAAAAUGGGGGCAAGUUUCAGAAGGUAGGACUUGUGGCUGGGACGAACGCGCUCUUUGUCGGGCGGGCCGACCCACAGCUAGUGAGGUGACCGCACUAAAUUGCUGUCUUAGCGGUCCGGUGUUAAGGUCAUUUCCUGACCUCCGGGCUCAGUCUACUCGUCACAGUUCGACUGACACAAAGGAUCGGACCGGUGUAGAUUCACAUAGAAGCGCAGGAGGUUGGCAAUCAAGCCACGUAAGCGGACCAAUCGUCGGCGUCUAUGACGGACAUGAUCCCGAACGCUAUAUGGCACUACCAAAGCCGAGCUUAUAUGCUAUGGGCAGUCAAAUCUAUUGUUUACGGUCGGAAUUUCUUUCGAUGGUACUUACGACGCGUAAAUACCACCAUGUAUCCCUGCCCGCCGCAACGGCGGUCGUUAGUACGUCGUACGUGAACCGAUUUUGCCGAAGGCUCGCGUUCGUGCCUCUGUUAGUUCAAAUUCUCCCGUACAGUAGGUAUGUUGACGCCCGACCUCGCACGGACUGUGGGGCGUGCGUUGGUAUUUUCAAGAGUAUAGCCGUCAUCCCCCACGAAAGGUUCCUCAGACCGAUCGAAUGGUCUGACGGCAAUAACGCCGGGCUGUGGAACUGCUUACAUAACGGACCUUUCAUUAGGAAAUAUCAGCUCCCUAUUACUCAUCCCCGUACCUGGUGGUUGGACGGGCUUCUGAUCAACCCCAUUUCGAACUGGCCAAGAGUGUAUGCCCAGUGUGGUCUCAGGGGCAAUUCGGCUAACAGCACUCGCGCGUGUUACAUUGCCCUAUCGACGCUAGACCUUAGACACACGUCUUUGACUGCUGGUGUCAAGGUCCGUGGGAGCCGUGUGGACGUAGCAGAUUACCGUAACAUUUACAUAAGACGUUUUGUUCUUUUCGUAGGUUUGAUUGGAGUAAAAUGUCUAAAGUUCAUCGGCGAUCAAUACCAAUUGAUCUGCACGAUUAUUAAGAGCCUCCCACAAUCUUUCACCACGGUUAGUCACGCCAAAGUUCCUCUUGCUGCGGUUGUACUUACAGAGAUCCAGAUCGCGCACAUGCUCCUCACCGAUAAACCACGCAUAAGGGACCCAAUAGCUCGGCAAUACGAAUCUAUGAUGUGUUUGCCGGCCGCGUUGCCGAUAAAGAGAGCAAUCAUCCGACCAUUCGUUAGGCGUGACGGCCAGCGAAAUUGUAGGAGGGAUCGAAGUCGCGGUGACUGGGCUGAGCUGAGAGCUACCGAUGGGAUUGUGAGACAUUAUGCGUGCGUCUUCAGGCUCCAGGUGAGCACUAUUUCUGGCCCAACAAUGUUCGCAGGAGUGUUCGUUGAGAGAGGCGUCGGAGAUACUGCCCGUAGUCAGGAUCCGGCUGGAUCCGGUACUAACUUUACGCUGCCUGCAAGUGCUCGGUUAGUCGUAUACGCUUCGGGCGUUACGGGACGUGAUCGACCACUUGUUAUAGAUGCAGCUACGCGACGCGCAUCCGCAGAACGACCCAUUGAAAGCCAGCAAAAUAAAUGGUCGAUAAAGUUAGACAAAUGCGGGUGUGGUGGGACGCGGCGCAGAGGCGACCACCUCCUUUCUGACCCUGUUAGAACAGGCCCUUUGUUCUCAGAAAGCGCGGAAUGCACCACAGGAAACAAUGAAUGGAUGUCCUGCCGGGUCAUACUAGAUUCAAUUUGCGUUUUACUGAUAGCUUCUAUACGCCGUCUGUCUCCGGCUGUUAGUCCCGGUGUCUUUUUCGUCCUUCAUCAUGCAAGCCUAGGUAGAGCCCAAACCACGCCGCCUUUUAAGUGUUACACGAUUAAAGAGGUAAGAGUGGAGGCAACUGCCCCCGAAGAUACACCGAAUUAUAGCCGGAUACGAAUCACUCCUGUUCAAGCCCCCCCGCUGAACGAAUCUUGUGCAGUUGUUUCUCGUUUCAACGUGAACCUGAGCCGGGGUUGUCAGCCAGGUCUUGGGCGGUCGAGAUCAAUGGUUACUCGCAAAUUCUUCGUUGGAGUUGAGUGCGCCACACAACACUUAAACGGGCUGUUGGAACUAAUGAUGCUCCUCGAUCCCCCCCACAACUUCGACCCAAGGUGGGAGAUACAUACCGGAGUGAGUUGUAUGGACAUCGUUAGAUGCAAAUCAUCACUAUUAGGGCCCGAGGGCUAUUAUCCGACCCCACCGAGCAUCGCCCCGCGAAUACCCCCAGUUGGGAGGUCACGACAAAUGUCGAGAGGGGUCGUACAAUUCUUCUUAAGUCAUCCAACAAUUAAGACAACCAUCAGUGCUUACGCCAACCUGUCGUCAAUUUUUACACCACGACGUAAUGGAGGAUUAAAAUUGCGCGAAUGUUUACCGUGGCAAGUUAUGUGUGCAGCCCAUCGACCCUGUCAAACGUCCUUGGAGUGCGCGAGUCUAAGGCACACCGCGGUUGAAUUUUUUAUCAGGGAGGUCCACCGCGGUGGUCUAUAUACAGCCAGCCGAUCCGUGGGUGCGGGGUUGAAUAGUUUUAACGGUGUAUUUCAUGCCUCUGUCCAGCGACGGCACGUGCAGGCAGAUAUACGGUGUUAUUGGGUGUUUUUCCCCGAUCAAGGAGAAUCGACUGGACCGUUACUUCGGUCGCUGGCCAGAGCGUUCACCAUCGCAGACGUAGGGCGUAACAAGCGAAGGCCGGACCAUAAUUACUACGUGAUCCUCCCAGAGAUGCCGCGCAGUGAGACUCUCUGUCCGUUGCAAAUCACCCAUUAUCUUCGUCAGGCUAUUCUAGUCGCUUUGCGAAAUUUUGUAUUCAGUCAUAUAAGCCACAAGCAGCGUAAGCCGCCAAAUGUGUUUACCUCGGCGGUCUUUAACGCCGCGAAUUGGUGCCCCGCCAACGGUGAUACCACCCGUCUUACUUUACUGCGUUCCUAUCCUACUUCCAUAACUCACUAUGCACUACUAAGGCAUAUCUUUCCCUGGACUCAUGUGUAUUCUGCGGCCGCCCAUGUUUACCGUGGAACAGGAGUAUUGAUAUUACGAGGGUCUAGUACUGUGAACACUCCUGUCUACGGGGACCUAAUGGGUCACUUGAAACGUCUAAGGGCCACGCAUGCUGACCAGAUGUACUGCGCCCUCGCACAUGAGUUCGCGCGAGCACUGCAGUAUGCGCCUCAGUUUCGCCUGUUAAUAGAUUUGUCUGAGUCGGAGCAUCUUCAGUUAACUGUCUUUAGGCGGUACGUACUGACAAGGAGUCGAGUAACCACGGGCGAAUGGUGUUGCCGAUCUUACAGCAUUUUAAGAGCUAAGCAUUGUCCAGCCCUGGGACAUGGGAGGCAUACCCCCAGUCUGGACAGCCCGCUGACUAGCUCGUAUGUAGUAAAUUUGAUAGCACCAAGUGGGUGGGUCACAGUAGGCAUUGAAAAUGUGUUCCACUAUUUUAUGUACAUCCUCAGCCGUCCCCGGAAUCAACUGCAGUUGGCGCACGACCAUCGGACCCUGUAUUGUUGUCGCGAAUCUUUGAGUGCUUCCAUUCGAGCGUGCUCGGUGGCGGCGCUUCUACCUACGGCACGUCACCCGGGACAGUGCCCCUCUCGCACAAGAGCUCCGACGUUAGACAUAGAAUACGCACUUGAGCCUUUCCGUACGCUCCCGUUCCCACGUAGUGUGGGAGGAAGUCACCUGAUUAUGGCGGCACAAGUACGCCAACCCAGGCAUAUAACUGUUACGAAUCCGAUCACUGGAGAGGUAUGCACACAAAUCCCCAAGAAUGCUAUAUAUCGUACGGACUAUUCCCAGCUGCGGGGGACAAUUGGCCUCUUGGCGUCGGGAAUCCAGUCCCAAGAUUGGUUAAUCCGAGUCCUAUCCUUAUUCACAGUGGGGAGCAUAACCGGGACUUAUCACGUAGCUAGCAGGAAUCAACACGCUCGCCUGCCCACAGCGAUUACGCCCUGCCAGUUCGCGAAUAAAAUCGCGACUUUCGCAUACGAUCGAUCUAAAAGGAUCCUUGCCUUGGUCAUACAUAUACGUCCCGCAUUGCUCCUCACCUUUUCACGCCUGUGUCAGAGCAAUAGAGUAGGCUCGAGAGAGGGCCCGGAUGAGGUUACAUAUAAUUCGUCGAUGAAGAUGGCUCGUGUGGCUGUAAAUCAUCUAUCCCGAGGCGCGCGAACACGUAGAGAUGACGGCAACCGUUUCAUGCUACCAAUUUGGGUCCAAAAGCCCCCGUGGAGUUUGAUUGCCUCUAAACUUUCCCCAAUUAUGCGUGACCUAGUGCAUAUGUCUUUAUUGCCGAACCGGUAUUAUUUGCUGGAUAUGCUAUUUGAUCGGGAGGCAGAAAGCUGGAGUAAAUGGCGUGGGGAUACGGUACAUGACGCUAUCCAUUCCGUGGGUAUCCCGACUUCUGGAGGGGUGACUCUCGAGAAUUCCAGUAAGCAUUCAGUUGGUCUCUUCAGACACGAACUCCCGGCCUCGACCCGGCCAACACCCUGGCGAGAGGUCAAAUUUUCGUUGAGGAACUGGUCCGAUAGUCAGACGAAACGGCGGAUUAGUCCACUCGUGGUAUCUCUUAAACGAAAGAGCGCUCAGAAACUCCCUAUCAUCCACAGAUUCGUUAGUACACUAAAUGGCGCGAGUUUUGUUCCUCCAUCAUCCAUUGCCUUUCCCGAGACCAGCAUUGCGCGGACUCCUCCUUUCAGCGGAGUCUUUAUAGAGGAGCACCAAUCAAAUCACAACACAACCGAGGGGAUCAGAGGGUUAAUACUGGAACCGCAAUCUGAGUGCAGUUGGCAAAGGGGUUUCGGCCAUCUUUCGCUACCCACUGAUCGCCCAAGUGGUCGUCCUCAUCUUCACAACCGACGAAAUGGUCAUUACUCGCGACAUUAUGUGUCAUCGCUCAGGUCAAGACGCCGAGAUGCUGGGGCCAUGUUUAUGAUGUUUCCAGGCACAAAGGCUUGCGUAAAAGACUGGGUAAAACGACACCCAAUACCAUACAAGCCAUAUCUCGGUGGGUGUGGGAUCGUCUUCACACAGGAUACCGAUUUGGUUGUGUGGGGCGACUAUAUCGAUGAACACGCGCGUAUCCUGAUAAUGAUCGAAGUCGAGCGAGUGUACUCCGGGAUAGAGAGCUUCUUCUGCUUGAAGGGGACACUGGCGACAAUUAGUCGGAAUUCCCAUUGCCUCCUUCUCAUUGAGUGCCCCCGAUAUAUUAAAGCAGCCCGCGUGACUAAAUACGAGAUGGCCAGAAGACAGCCCUGGCCCAUUACCCUCCGCUCAAAGAAAGUAUGGCCGGGCGGGGCUCCCAGGGCCGCGGGAAGUCCUCAGGCAUCCCAAUCCGGUAUAGAUGAGCGGAUUUUCAUGUCCCCUUUCCAGAAAACAAUUAAAGUUAAUGGGCUAAGUACAAUUUGGUGCUAUCUUCACCCGUCCCGCACAGGCUGGCUCUACUGUCAUGCAUGGAACGGAAAUGCGCGGUGCGUUAUUACGUCUGCUCGGCACCGACAAGUUGCUUGCGAGCCAGCGACUCGGCAUGAAAGACGGGUUUACCGAGUUAUCUUGGUACGACCCCGUCCUAUAGGGUGUGUGGUUCCCCAAGUAGUGCGUAGUGUCUCGUCAGUGUACGUUUCAGUCACUGGACACUCCAAUGUUAGGCGGCCGGCAACACCGGCCUUAUCUGUGAGCGGUUCCUUAUCCUUGCGACUGCACCCUGCCCGAAACGGCGCGAUCCUGUUAUGCUUACACAGCUAUGAAAUGCGAGGCGCGAUACAGCCUCUAUAA\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MDSPMCAPLGYVYRSEAQIPTNASTAESYPSSYVRCAVVCVSASRNNCTLIRLNCEGTMVLNVRKLIIDSPLNVAPNREPTGSTCFAWLSMRTVREYHTDCISHECSSSGYLTRAVLPAIGTFLRIAVPHRWEVTNGGMAQRATSLYQISSKPLPDTHCAVPRYGRTNLLIYVTLNVGTIIPVNYMPLLLMEDFPGQGLRSDWRSLPVVQRERAALHVNWGNSHVILRRRNISAVVGDLFCIRMKNVNVKHRASPRFNSHQVIISGDEDMTKLCPRCAYCATKHLAYLGFTTCPLVNGLRTTEFLSPGRNRPTFMRCLKGRVISANGAPGCKSRLTLRRNRLVRIEQEPKPDSCPQHGRCGNDQTQPRTMTPKSPPSPTLRARRSVKLCGYGGPGSIRRDSGIYEHPACWAHIGVKLQHTPFGRRETLARKGAQPGTELTKCSALRVGYRHRSPCGNVFDPGRPQHLLYRSSEWHAAMSYLPLPTPGLRSTAGAPRLRDTRTIDKVLLCMAEHLYPAWGRPSRWSTPPKSRFRHGLASPRMPLLGYGRLTEMTNDAVALVSVSTCRDWSSARLGGSYWNARPPSARSGTNPNDLELSGLSGTYESSPGCNSVGKWKFRALGARQIMHTNGLKGSLIRGPKTICVECHVSGLARTYRLSSGCTRKEGMLSCKEPFWYIVVIRNLWLLVILPPYFHTVTTSYIRRQLRLAMAWPETLVMGHAVVTSAKKYMGGRLLAIIGLRSSLGRCSGEAKMALPQRREIPSSYSSSGQCWLTARRHAVDGIPAVDSRCLRSCLRLKTLRSQRFDDIQCVFRYAAKMQELRCWLHSGSRAIVYSPAAGVGLHSVVRYPDTILMQLSHPSPLVVISIRRKATMSPRNAPGKPTLGVLLARCEDKCHQRGEGDLTVAFLSFLSHAQSANGFWQQGLASNSGGVSIQSHYVVRTIELYLLTDSTTTCCRFWNFTRPVSTQPGKTEISPRHARPSLLIWGQSLLGLPHPLERLFDTLDLRYNRATQTPRGGCMLVAGICPTRVFKGLRQNAESFNCFKIQFIAGHDLTATNCSRQARLSAWLRARTVSSNSIVGNRCIGAVRNRPVYEWCRNPSINPRMTIRVTSRACTIGNGVKLHLYAKWGQVSEGRTCGWDERALCRAGRPTASEVTALNCCLSGPVLRSPDLRAQSTRHSSTDTKDRTGVDSHRSAGGWQSSHVSGPIVGVYDGHDPERYMALPKPSLYAMGSQIYCLRSELSMVLTTRKYHHVSLPAATAVVSTSYVNRCRRLAFVPLLVQILPYSRYVDARPRTDCGACVGIFKSIAVIPHERFLRPIEWSDGNNAGLWNCLHNGPFIRKYQLPITHPRTWWLDGLLINPISNWPRVYAQCGLRGNSANSTRACYIALSTLDLRHTSLTAGVKVRGSRVDVADYRNIYIRRVLFVGLIGVKCLKFIGDQYQLICTIIKSLPQSFTTVSHAKVPLAAVVLTEIQIAHMLLTDKPRIRDPIARQYESMMCLPAALPIKRAIIRPFVRRDGQRNCRRDRSRGDWAELRATDGIVRHYACVFRLQVSTISGPTMFAGVFVERGVGDTARSQDPAGSGTNTLPASARLVVYASGVTGRDRPLVIDAATRRASAERPIESQQNKWSIKLDKCGCGGTRRRGDHLLSDPVRTGPLFSESAECTTGNNEWMSCRVILDSICVLLIASIRRLSPAVSPGVFVLHHASLGRAQTTPPKCYTIKEVRVEATAPEDTPNYSRIRITPVQAPPLNESCAVVSRFNVNLSRGCQPGLGRSRSMVTRKFFVGVECATQHLNGLLELMMLLDPPHNFDPRWEIHTGVSCMDIVRCKSSLLGPEGYYPTPPSIAPRIPPVGRSRQMSRGVVQFFLSHPTIKTTISAYANLSSITPRRNGGLKLRECLPWQVMCAAHRPCQTSLECASLRHTAVEIREVHRGGLYTASRSVGAGLNSNGVHASVQRRHVQADIRCYWVFPDQGESTGPLLRSLARAFTIADVGRNKRRPDHNYYVILPEMPRSETLCPLQITHYLRQAILVALRNVFSHISHKQRKPPNVTSAVNAANWCPANGDTTRLTLLRSYPTSITHYALLRHIPWTHVYSAAAHVYRGTGVLILRGSSTVNTPVYGDLMGHLKRLRATHADQMYCALAHEFARALQYAPQRLLIDLSESEHLQLTVRRYVLTRSRVTTGEWCCRSYSILRAKHCPALGHGRHTPSLDSPLTSSYVVNLIAPSGWVTVGIENVFHYMYILSRPRNQLQLAHDHRTLYCCRESLSASIRACSVAALLPTARHPGQCPSRTRAPTLDIEYALEPFRTLPFPRSVGGSHLIMAAQVRQPRHITVTNPITGEVCTQIPKNAIYRTDYSQLRGTIGLLASGIQSQDWLIRVLSLFTVGSITGTYHVASRNQHARLPTAITPCQFANKIATFAYDRSKRILALVIHIRPALLLTSRLCQSNRVGSREGPDEVTYNSSMKMARVAVNHLSRGARTRRDDGNRFMLPIWVQKPPWSLIASKLSPIMRDLVHMSLLPNRYYLLDMLDREAESWSKWRGDTVHDAIHSVGIPTSGGVTLENSSKHSVGLFRHELPASTRPTPWREVKSLRNWSDSQTKRRISPLVVSLKRKSAQKLPIIHRFVSTLNGASVPPSSIAPETSIARTPPFSGVIEEHQSNHNTTEGIRGLILEPQSECSWQRGFGHLSLPTDRPSGRPHLHNRRNGHYSRHYVSSLRSRRRDAGAMMMPGTKACVKDWVKRHPIPYKPYLGGCGIVFTQDTDLVVWGDYIDEHARILIMIEVERVYSGIESFFCLKGTLATISRNSHCLLLIECPRYIKAARVTKYEMARRQPWPITLRSKKVWPGGAPRAAGSPQASQSGIDERIFMSPFQKTIKVNGLSTIWCYLHPSRTGWLYCHAWNGNARCVITSARHRQVACEPATRHERRVYRVILVRPRPIGCVVPQVVRSVSSVYVSVTGHSNVRRPATPALSVSGSLSLRLHPARNGAILLCLHSYEMRGAIQPLStop\n"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "import json\n",
    "def load_translations(csv_file):\n",
    "    translations = {}\n",
    "    with open(csv_file, 'r') as file:\n",
    "        reader = csv.reader(file)\n",
    "        for row in reader:\n",
    "            translations[row[0].strip()] = row[1].strip()\n",
    "    return translations\n",
    "# Input RNA strand\n",
    "rna_strand = input(\"What is the Strand?\")\n",
    "\n",
    "# Dictionary for codon to amino acid translation\n",
    "mydict = load_translations('dictionary_rna.csv')\n",
    "\n",
    "# Function to translate RNA strand\n",
    "def translate_rna(rna_strand, codon_dict):\n",
    "    # Initialize an empty string for the translated sequence\n",
    "    protein_sequence = \"\"\n",
    "    # Iterate over the RNA strand in steps of 3\n",
    "    for i in range(0, len(rna_strand), 3):\n",
    "        # Extract the current codon\n",
    "        codon = rna_strand[i:i+3]\n",
    "        # Translate the codon and add to the protein sequence\n",
    "        protein_sequence += codon_dict.get(codon, \"\")\n",
    "    return protein_sequence\n",
    "\n",
    "# Translate the RNA strand\n",
    "protein = translate_rna(rna_strand, mydict)\n",
    "clean_text = protein.strip()\n",
    "with open(\"Output.txt\", \"w\") as text_file:\n",
    "    print(f\"{clean_text}\", file=text_file)\n",
    "# Print the translated protein sequence\n",
    "print(protein)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "484a1714-dd28-4a5d-9100-80f43efff7ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "What is the Strand? AUGGAUUCCCCAAUGUGUGCCCCUCUUGGCUAUGUAUAUAGGUCUGAGGCCCAGAUUCCGACAAACGCCAGUACUGCUGAGUCGUACCCUAGUUUUAGCUAUGUGAGGUGUGCAGUGGUAUGCGUGAGUGCCUCGCGCAAUAAUUGCACGCUAAUUCGGCUUAACUGUGAAGGGACGAUGGUGCUCAAUGUCCGUAAGCUAAUAAUUGAUUCUCCCCUCAAUGUCGCACCUAACAGAGAACCGACGGGAAGUACGUGCUUCGCAUGGCUAAGUAUGAGAACUGUCCGAGAGUACCAUACCGACUGUAUAUCCCAUGAGUGCAGCUCCUCGGGAUAUCUGACACGCGCCGUGCUCCCGGCUAUUGGCACUUUCUUACGUAUAGCUGUACCGCAUCGCUGGGAAGUCUUUUUUACGAAUGGUGGAAUGGCUCAGCGAGCGACGUUUAGCCUAUACCAAAUUUCUAGUAAGCCUCUACCAGACACUCACUGCGCCGUUCCACGGUACGGGCGUACCAACUUGCUUAUUUAUGUAACUCUGAAUGUGGGUACUAUAAUCCCGGUCAAUUACAUGCCACUCCUACUCAUGGAGGAUUUCCCGGGUCAGGGGUUGAGAUCUGACUGGAGGAGCCUUCCAGUUGUACAACGAGAAAGAGCGGCACUUCACGUGAAUUGGGGUAAUAGUCAUGUAAUCUUAAGACGCCGCAACAUAAGUGCCGUAGUGGGUGAUUUAUUUUUCUGCAUCCGGAUGAAGAAUGUGAACGUGAAACACUUUCGCGCAUCUCCUCGGUUCAACUCGCAUCAGGUUAUAAUCAGUGGGGACGAAGACAUGACCAAGUUGUGUCCAAGAUGUGCGUAUUGUGCGACUAAACACUUGGCCUACUUAGGGUUCACCACAUGCCCGUUAGUCAAUGGCUUGAGGACCACCGAAUUCCUCUCUCCUGGGAGAAAUAGGCCAACUUUCAUGCGUUGUCUAAAGGGCCGCGUUAUAUCUGCAAAUGGCGCUCCUGGGUGCAAGUCACGCCUGACCCUGCGACGGAACAGGCUUGUUAGGAUCGAGCAGGAACCAAAGCCGGAUUCCUGCCCGCAGCACGGUCGCUGUGGGAACGAUCAGACCCAACCAAGGACAAUGACGCCCAAGAGUCCUCCAUCCCCAACACUGAGGGCUCGGCGCAGUGUCAAGUUAUGCGGGUACGGCGGCCCGGGCUCGAUACGACGCGAUUCCGGCAUAUACGAACAUCCGGCAUGCUGGGCACAUUUUAUAGGCGUUUUUAAGCUCCAACAUACUCCGUUCGGGCGGAGGGAAACACUGGCGCGCAAAGGGGCCCAACCGGGUACGGAAUUAACCAAAUGCUCAGCGUUGCGUGUGGGAUAUCGUCAUCGGUCCCCUUGCGGGAAUGUGUUCGACCCUUUUGGCCGACCUCAACACCUUUUGUAUAGAUCCAGCGAAUGGCAUGCUGCUAUGUCGUAUUUUUUGCCACUGCCUACACCAGGUCUCCGCAGUACCGCCGGAGCACCCCGACUGAGGGACACUCGGACGAUAGAUAAAGUGCUUCUUUGCAUGGCAGAGCAUCUGUAUCCAGCCUGGGGCAGACCUUCGCGGUGGUCCACCCCGCCGAAAAGCAGAUUCAGGCACGGUCUAGCGUCACCGCGUAUGCCCUUACUCGGGUACGGUCGACUUACAGAGAUGACGAAUGACGCAGUCGCACUGGUUAGCGUGUCGACUUGCCGGGAUUGGAGCAGUGCUCGCCUAGGAGGUAGCUUUUAUUGGAACGCUCGGCCCCCGAGUGCCAGAUCGGGAACUAACCCAAACGAUCUGGAGUUGAGCGGGUUGUCGGGGACAUACGAAUCGUCCCCCGGAUGCAACUCCGUUGGAAAGUGGAAGUUCUUUCGCGCGCUGGGAGCUUUUCGUCAGAUAAUGCAUACGAAUGGUCUAAAAGGAUCGUUGAUUAGAGGGCCGAAAACUAUCUGCGUGGAGUGUCAUGUGUCCGGACUUGCUAGAACGUACCGGCUAUCCUCUGGCUGUACGAGAAAAGAGGGCAUGUUGUCCUGUAAGGAAUUUCCAUUCUGGUAUAUAGUUGUUAUUAGGUUUAACCUGUUUUGGCUGCUCGUUAUACUGCCGCCAUACUUCCAUACGGUAACCACGUCUUAUAUCCGCAGACAACUUCGAUUGGCGAUGGCCUGGCCUGAGACCUUGGUAAUGGGGCACGCGUUUGUAGUAACGUCUGCCAAGAAGUAUAUGGGUGGCCGGCUCCUCGCUAUUAUCGGACUACGCUCGUCCUUAGGCAGGUGCUCUGGCGAAGCAAAGAUGGCACUCCCACAGAGACGAGAAAUCCCGUCAUCUUAUUCCUCUUCGGGUCAAUGCUGGCUUACUGCGAGACGCCACGCUGUAGAUGGGAUUCCAGCCGUUGAUAGUCGUUGUCUGCGAUCGUGCCUGCGGCUUAAGACCCUGCGUUCACAACGGUUCGAUGACAUCCAGUGCGUUUUCAGGUAUGCAGCUAAAAUGCAAGAACUUCGCUGUUGGCUCCACUCGGGUUCCCGAGCUAUUUUUGUUUAUUCCCCAGCGGCAGGGGUUGGCUUGCACUCUGUAGUACGAUAUCCGGACACGAUAUUGAUGCAAUUAAGCCAUCCGUCGCCGCUGGUGGUAAUUUCAAUUCGGCGCAAAGCAACGAUGUCUCCACGCAAUGCUCCGGGCAAGCCCACUUUAGGCGUGUUGCUGGCAAGAUGCGAGGACAAGUGCCAUCAACGUGGGGAGGGGGACCUUACCGUUGCCUUCUUGAGUUUCCUGAGCCAUGCUCAGAGUGCUAACGGAUUCUGGCAGCAGGGAUUAGCAAGCAACAGCGGGGGGGUAAGUAUCCAGUCUCAUUAUGUAGUGCGUACUAUCGAGCUUUACCUUCUUACAGACUCUACCACGACCUGUUGCAGGUUCUGGAAUUUCACACGGCCUGUCUCUACUCAGCCAGGGAAAACCGAAAUAUCACCCAGACAUGCUAGACCAAGUCUACUCAUAUGGGGCCAAAGUCUGCUAGGACUCCCUCACCCACUGGAGCGUCUUUUCGACACUCUCGAUCUGCGCUAUAACCGCGCGACGCAAACCCCGCGAGGUGGGUGCAUGCUUGUGGCAGGCAUCUGCCCGACUCGCGUCUUCAAGGGAUUACGCCAAAACGCAGAGUCAUUCAAUUGUUUCAAGAUACAGUUCAUAGCCUUUGGCCAUGAUUUAACAGCUACCAACUGCUCACGCCAGGCUCGCCUCAGCGCGUGGCUAAGAGCGCGCACUGUAUCCUCAAAUAGCAUUGUGGGGAACCGGUGCAUAGGUGCGGUGAGAAAUCGGCCAGUCUACGAAUGGUGUCGAAAUCCAUCUAUUAAUCCUCGGAUGACAAUACGUGUGACAUCCCGCGCUUGCACAAUUGGAAACGGCGUGAAGCUUCAUUUGUAUGCAAAAUGGGGGCAAGUUUCAGAAGGUAGGACUUGUGGCUGGGACGAACGCGCUCUUUGUCGGGCGGGCCGACCCACAGCUAGUGAGGUGACCGCACUAAAUUGCUGUCUUAGCGGUCCGGUGUUAAGGUCAUUUCCUGACCUCCGGGCUCAGUCUACUCGUCACAGUUCGACUGACACAAAGGAUCGGACCGGUGUAGAUUCACAUAGAAGCGCAGGAGGUUGGCAAUCAAGCCACGUAAGCGGACCAAUCGUCGGCGUCUAUGACGGACAUGAUCCCGAACGCUAUAUGGCACUACCAAAGCCGAGCUUAUAUGCUAUGGGCAGUCAAAUCUAUUGUUUACGGUCGGAAUUUCUUUCGAUGGUACUUACGACGCGUAAAUACCACCAUGUAUCCCUGCCCGCCGCAACGGCGGUCGUUAGUACGUCGUACGUGAACCGAUUUUGCCGAAGGCUCGCGUUCGUGCCUCUGUUAGUUCAAAUUCUCCCGUACAGUAGGUAUGUUGACGCCCGACCUCGCACGGACUGUGGGGCGUGCGUUGGUAUUUUCAAGAGUAUAGCCGUCAUCCCCCACGAAAGGUUCCUCAGACCGAUCGAAUGGUCUGACGGCAAUAACGCCGGGCUGUGGAACUGCUUACAUAACGGACCUUUCAUUAGGAAAUAUCAGCUCCCUAUUACUCAUCCCCGUACCUGGUGGUUGGACGGGCUUCUGAUCAACCCCAUUUCGAACUGGCCAAGAGUGUAUGCCCAGUGUGGUCUCAGGGGCAAUUCGGCUAACAGCACUCGCGCGUGUUACAUUGCCCUAUCGACGCUAGACCUUAGACACACGUCUUUGACUGCUGGUGUCAAGGUCCGUGGGAGCCGUGUGGACGUAGCAGAUUACCGUAACAUUUACAUAAGACGUUUUGUUCUUUUCGUAGGUUUGAUUGGAGUAAAAUGUCUAAAGUUCAUCGGCGAUCAAUACCAAUUGAUCUGCACGAUUAUUAAGAGCCUCCCACAAUCUUUCACCACGGUUAGUCACGCCAAAGUUCCUCUUGCUGCGGUUGUACUUACAGAGAUCCAGAUCGCGCACAUGCUCCUCACCGAUAAACCACGCAUAAGGGACCCAAUAGCUCGGCAAUACGAAUCUAUGAUGUGUUUGCCGGCCGCGUUGCCGAUAAAGAGAGCAAUCAUCCGACCAUUCGUUAGGCGUGACGGCCAGCGAAAUUGUAGGAGGGAUCGAAGUCGCGGUGACUGGGCUGAGCUGAGAGCUACCGAUGGGAUUGUGAGACAUUAUGCGUGCGUCUUCAGGCUCCAGGUGAGCACUAUUUCUGGCCCAACAAUGUUCGCAGGAGUGUUCGUUGAGAGAGGCGUCGGAGAUACUGCCCGUAGUCAGGAUCCGGCUGGAUCCGGUACUAACUUUACGCUGCCUGCAAGUGCUCGGUUAGUCGUAUACGCUUCGGGCGUUACGGGACGUGAUCGACCACUUGUUAUAGAUGCAGCUACGCGACGCGCAUCCGCAGAACGACCCAUUGAAAGCCAGCAAAAUAAAUGGUCGAUAAAGUUAGACAAAUGCGGGUGUGGUGGGACGCGGCGCAGAGGCGACCACCUCCUUUCUGACCCUGUUAGAACAGGCCCUUUGUUCUCAGAAAGCGCGGAAUGCACCACAGGAAACAAUGAAUGGAUGUCCUGCCGGGUCAUACUAGAUUCAAUUUGCGUUUUACUGAUAGCUUCUAUACGCCGUCUGUCUCCGGCUGUUAGUCCCGGUGUCUUUUUCGUCCUUCAUCAUGCAAGCCUAGGUAGAGCCCAAACCACGCCGCCUUUUAAGUGUUACACGAUUAAAGAGGUAAGAGUGGAGGCAACUGCCCCCGAAGAUACACCGAAUUAUAGCCGGAUACGAAUCACUCCUGUUCAAGCCCCCCCGCUGAACGAAUCUUGUGCAGUUGUUUCUCGUUUCAACGUGAACCUGAGCCGGGGUUGUCAGCCAGGUCUUGGGCGGUCGAGAUCAAUGGUUACUCGCAAAUUCUUCGUUGGAGUUGAGUGCGCCACACAACACUUAAACGGGCUGUUGGAACUAAUGAUGCUCCUCGAUCCCCCCCACAACUUCGACCCAAGGUGGGAGAUACAUACCGGAGUGAGUUGUAUGGACAUCGUUAGAUGCAAAUCAUCACUAUUAGGGCCCGAGGGCUAUUAUCCGACCCCACCGAGCAUCGCCCCGCGAAUACCCCCAGUUGGGAGGUCACGACAAAUGUCGAGAGGGGUCGUACAAUUCUUCUUAAGUCAUCCAACAAUUAAGACAACCAUCAGUGCUUACGCCAACCUGUCGUCAAUUUUUACACCACGACGUAAUGGAGGAUUAAAAUUGCGCGAAUGUUUACCGUGGCAAGUUAUGUGUGCAGCCCAUCGACCCUGUCAAACGUCCUUGGAGUGCGCGAGUCUAAGGCACACCGCGGUUGAAUUUUUUAUCAGGGAGGUCCACCGCGGUGGUCUAUAUACAGCCAGCCGAUCCGUGGGUGCGGGGUUGAAUAGUUUUAACGGUGUAUUUCAUGCCUCUGUCCAGCGACGGCACGUGCAGGCAGAUAUACGGUGUUAUUGGGUGUUUUUCCCCGAUCAAGGAGAAUCGACUGGACCGUUACUUCGGUCGCUGGCCAGAGCGUUCACCAUCGCAGACGUAGGGCGUAACAAGCGAAGGCCGGACCAUAAUUACUACGUGAUCCUCCCAGAGAUGCCGCGCAGUGAGACUCUCUGUCCGUUGCAAAUCACCCAUUAUCUUCGUCAGGCUAUUCUAGUCGCUUUGCGAAAUUUUGUAUUCAGUCAUAUAAGCCACAAGCAGCGUAAGCCGCCAAAUGUGUUUACCUCGGCGGUCUUUAACGCCGCGAAUUGGUGCCCCGCCAACGGUGAUACCACCCGUCUUACUUUACUGCGUUCCUAUCCUACUUCCAUAACUCACUAUGCACUACUAAGGCAUAUCUUUCCCUGGACUCAUGUGUAUUCUGCGGCCGCCCAUGUUUACCGUGGAACAGGAGUAUUGAUAUUACGAGGGUCUAGUACUGUGAACACUCCUGUCUACGGGGACCUAAUGGGUCACUUGAAACGUCUAAGGGCCACGCAUGCUGACCAGAUGUACUGCGCCCUCGCACAUGAGUUCGCGCGAGCACUGCAGUAUGCGCCUCAGUUUCGCCUGUUAAUAGAUUUGUCUGAGUCGGAGCAUCUUCAGUUAACUGUCUUUAGGCGGUACGUACUGACAAGGAGUCGAGUAACCACGGGCGAAUGGUGUUGCCGAUCUUACAGCAUUUUAAGAGCUAAGCAUUGUCCAGCCCUGGGACAUGGGAGGCAUACCCCCAGUCUGGACAGCCCGCUGACUAGCUCGUAUGUAGUAAAUUUGAUAGCACCAAGUGGGUGGGUCACAGUAGGCAUUGAAAAUGUGUUCCACUAUUUUAUGUACAUCCUCAGCCGUCCCCGGAAUCAACUGCAGUUGGCGCACGACCAUCGGACCCUGUAUUGUUGUCGCGAAUCUUUGAGUGCUUCCAUUCGAGCGUGCUCGGUGGCGGCGCUUCUACCUACGGCACGUCACCCGGGACAGUGCCCCUCUCGCACAAGAGCUCCGACGUUAGACAUAGAAUACGCACUUGAGCCUUUCCGUACGCUCCCGUUCCCACGUAGUGUGGGAGGAAGUCACCUGAUUAUGGCGGCACAAGUACGCCAACCCAGGCAUAUAACUGUUACGAAUCCGAUCACUGGAGAGGUAUGCACACAAAUCCCCAAGAAUGCUAUAUAUCGUACGGACUAUUCCCAGCUGCGGGGGACAAUUGGCCUCUUGGCGUCGGGAAUCCAGUCCCAAGAUUGGUUAAUCCGAGUCCUAUCCUUAUUCACAGUGGGGAGCAUAACCGGGACUUAUCACGUAGCUAGCAGGAAUCAACACGCUCGCCUGCCCACAGCGAUUACGCCCUGCCAGUUCGCGAAUAAAAUCGCGACUUUCGCAUACGAUCGAUCUAAAAGGAUCCUUGCCUUGGUCAUACAUAUACGUCCCGCAUUGCUCCUCACCUUUUCACGCCUGUGUCAGAGCAAUAGAGUAGGCUCGAGAGAGGGCCCGGAUGAGGUUACAUAUAAUUCGUCGAUGAAGAUGGCUCGUGUGGCUGUAAAUCAUCUAUCCCGAGGCGCGCGAACACGUAGAGAUGACGGCAACCGUUUCAUGCUACCAAUUUGGGUCCAAAAGCCCCCGUGGAGUUUGAUUGCCUCUAAACUUUCCCCAAUUAUGCGUGACCUAGUGCAUAUGUCUUUAUUGCCGAACCGGUAUUAUUUGCUGGAUAUGCUAUUUGAUCGGGAGGCAGAAAGCUGGAGUAAAUGGCGUGGGGAUACGGUACAUGACGCUAUCCAUUCCGUGGGUAUCCCGACUUCUGGAGGGGUGACUCUCGAGAAUUCCAGUAAGCAUUCAGUUGGUCUCUUCAGACACGAACUCCCGGCCUCGACCCGGCCAACACCCUGGCGAGAGGUCAAAUUUUCGUUGAGGAACUGGUCCGAUAGUCAGACGAAACGGCGGAUUAGUCCACUCGUGGUAUCUCUUAAACGAAAGAGCGCUCAGAAACUCCCUAUCAUCCACAGAUUCGUUAGUACACUAAAUGGCGCGAGUUUUGUUCCUCCAUCAUCCAUUGCCUUUCCCGAGACCAGCAUUGCGCGGACUCCUCCUUUCAGCGGAGUCUUUAUAGAGGAGCACCAAUCAAAUCACAACACAACCGAGGGGAUCAGAGGGUUAAUACUGGAACCGCAAUCUGAGUGCAGUUGGCAAAGGGGUUUCGGCCAUCUUUCGCUACCCACUGAUCGCCCAAGUGGUCGUCCUCAUCUUCACAACCGACGAAAUGGUCAUUACUCGCGACAUUAUGUGUCAUCGCUCAGGUCAAGACGCCGAGAUGCUGGGGCCAUGUUUAUGAUGUUUCCAGGCACAAAGGCUUGCGUAAAAGACUGGGUAAAACGACACCCAAUACCAUACAAGCCAUAUCUCGGUGGGUGUGGGAUCGUCUUCACACAGGAUACCGAUUUGGUUGUGUGGGGCGACUAUAUCGAUGAACACGCGCGUAUCCUGAUAAUGAUCGAAGUCGAGCGAGUGUACUCCGGGAUAGAGAGCUUCUUCUGCUUGAAGGGGACACUGGCGACAAUUAGUCGGAAUUCCCAUUGCCUCCUUCUCAUUGAGUGCCCCCGAUAUAUUAAAGCAGCCCGCGUGACUAAAUACGAGAUGGCCAGAAGACAGCCCUGGCCCAUUACCCUCCGCUCAAAGAAAGUAUGGCCGGGCGGGGCUCCCAGGGCCGCGGGAAGUCCUCAGGCAUCCCAAUCCGGUAUAGAUGAGCGGAUUUUCAUGUCCCCUUUCCAGAAAACAAUUAAAGUUAAUGGGCUAAGUACAAUUUGGUGCUAUCUUCACCCGUCCCGCACAGGCUGGCUCUACUGUCAUGCAUGGAACGGAAAUGCGCGGUGCGUUAUUACGUCUGCUCGGCACCGACAAGUUGCUUGCGAGCCAGCGACUCGGCAUGAAAGACGGGUUUACCGAGUUAUCUUGGUACGACCCCGUCCUAUAGGGUGUGUGGUUCCCCAAGUAGUGCGUAGUGUCUCGUCAGUGUACGUUUCAGUCACUGGACACUCCAAUGUUAGGCGGCCGGCAACACCGGCCUUAUCUGUGAGCGGUUCCUUAUCCUUGCGACUGCACCCUGCCCGAAACGGCGCGAUCCUGUUAUGCUUACACAGCUAUGAAAUGCGAGGCGCGAUACAGCCUCUAUAA\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MDSPMCAPLGYVYRSEAQIPTNASTAESYPSSYVRCAVVCVSASRNNCTLIRLNCEGTMVLNVRKLIIDSPLNVAPNREPTGSTCFAWLSMRTVREYHTDCISHECSSSGYLTRAVLPAIGTFLRIAVPHRWEVTNGGMAQRATSLYQISSKPLPDTHCAVPRYGRTNLLIYVTLNVGTIIPVNYMPLLLMEDFPGQGLRSDWRSLPVVQRERAALHVNWGNSHVILRRRNISAVVGDLFCIRMKNVNVKHRASPRFNSHQVIISGDEDMTKLCPRCAYCATKHLAYLGFTTCPLVNGLRTTEFLSPGRNRPTFMRCLKGRVISANGAPGCKSRLTLRRNRLVRIEQEPKPDSCPQHGRCGNDQTQPRTMTPKSPPSPTLRARRSVKLCGYGGPGSIRRDSGIYEHPACWAHIGVKLQHTPFGRRETLARKGAQPGTELTKCSALRVGYRHRSPCGNVFDPGRPQHLLYRSSEWHAAMSYLPLPTPGLRSTAGAPRLRDTRTIDKVLLCMAEHLYPAWGRPSRWSTPPKSRFRHGLASPRMPLLGYGRLTEMTNDAVALVSVSTCRDWSSARLGGSYWNARPPSARSGTNPNDLELSGLSGTYESSPGCNSVGKWKFRALGARQIMHTNGLKGSLIRGPKTICVECHVSGLARTYRLSSGCTRKEGMLSCKEPFWYIVVIRNLWLLVILPPYFHTVTTSYIRRQLRLAMAWPETLVMGHAVVTSAKKYMGGRLLAIIGLRSSLGRCSGEAKMALPQRREIPSSYSSSGQCWLTARRHAVDGIPAVDSRCLRSCLRLKTLRSQRFDDIQCVFRYAAKMQELRCWLHSGSRAIVYSPAAGVGLHSVVRYPDTILMQLSHPSPLVVISIRRKATMSPRNAPGKPTLGVLLARCEDKCHQRGEGDLTVAFLSFLSHAQSANGFWQQGLASNSGGVSIQSHYVVRTIELYLLTDSTTTCCRFWNFTRPVSTQPGKTEISPRHARPSLLIWGQSLLGLPHPLERLFDTLDLRYNRATQTPRGGCMLVAGICPTRVFKGLRQNAESFNCFKIQFIAGHDLTATNCSRQARLSAWLRARTVSSNSIVGNRCIGAVRNRPVYEWCRNPSINPRMTIRVTSRACTIGNGVKLHLYAKWGQVSEGRTCGWDERALCRAGRPTASEVTALNCCLSGPVLRSPDLRAQSTRHSSTDTKDRTGVDSHRSAGGWQSSHVSGPIVGVYDGHDPERYMALPKPSLYAMGSQIYCLRSELSMVLTTRKYHHVSLPAATAVVSTSYVNRCRRLAFVPLLVQILPYSRYVDARPRTDCGACVGIFKSIAVIPHERFLRPIEWSDGNNAGLWNCLHNGPFIRKYQLPITHPRTWWLDGLLINPISNWPRVYAQCGLRGNSANSTRACYIALSTLDLRHTSLTAGVKVRGSRVDVADYRNIYIRRVLFVGLIGVKCLKFIGDQYQLICTIIKSLPQSFTTVSHAKVPLAAVVLTEIQIAHMLLTDKPRIRDPIARQYESMMCLPAALPIKRAIIRPFVRRDGQRNCRRDRSRGDWAELRATDGIVRHYACVFRLQVSTISGPTMFAGVFVERGVGDTARSQDPAGSGTNTLPASARLVVYASGVTGRDRPLVIDAATRRASAERPIESQQNKWSIKLDKCGCGGTRRRGDHLLSDPVRTGPLFSESAECTTGNNEWMSCRVILDSICVLLIASIRRLSPAVSPGVFVLHHASLGRAQTTPPKCYTIKEVRVEATAPEDTPNYSRIRITPVQAPPLNESCAVVSRFNVNLSRGCQPGLGRSRSMVTRKFFVGVECATQHLNGLLELMMLLDPPHNFDPRWEIHTGVSCMDIVRCKSSLLGPEGYYPTPPSIAPRIPPVGRSRQMSRGVVQFFLSHPTIKTTISAYANLSSITPRRNGGLKLRECLPWQVMCAAHRPCQTSLECASLRHTAVEIREVHRGGLYTASRSVGAGLNSNGVHASVQRRHVQADIRCYWVFPDQGESTGPLLRSLARAFTIADVGRNKRRPDHNYYVILPEMPRSETLCPLQITHYLRQAILVALRNVFSHISHKQRKPPNVTSAVNAANWCPANGDTTRLTLLRSYPTSITHYALLRHIPWTHVYSAAAHVYRGTGVLILRGSSTVNTPVYGDLMGHLKRLRATHADQMYCALAHEFARALQYAPQRLLIDLSESEHLQLTVRRYVLTRSRVTTGEWCCRSYSILRAKHCPALGHGRHTPSLDSPLTSSYVVNLIAPSGWVTVGIENVFHYMYILSRPRNQLQLAHDHRTLYCCRESLSASIRACSVAALLPTARHPGQCPSRTRAPTLDIEYALEPFRTLPFPRSVGGSHLIMAAQVRQPRHITVTNPITGEVCTQIPKNAIYRTDYSQLRGTIGLLASGIQSQDWLIRVLSLFTVGSITGTYHVASRNQHARLPTAITPCQFANKIATFAYDRSKRILALVIHIRPALLLTSRLCQSNRVGSREGPDEVTYNSSMKMARVAVNHLSRGARTRRDDGNRFMLPIWVQKPPWSLIASKLSPIMRDLVHMSLLPNRYYLLDMLDREAESWSKWRGDTVHDAIHSVGIPTSGGVTLENSSKHSVGLFRHELPASTRPTPWREVKSLRNWSDSQTKRRISPLVVSLKRKSAQKLPIIHRFVSTLNGASVPPSSIAPETSIARTPPFSGVIEEHQSNHNTTEGIRGLILEPQSECSWQRGFGHLSLPTDRPSGRPHLHNRRNGHYSRHYVSSLRSRRRDAGAMMMPGTKACVKDWVKRHPIPYKPYLGGCGIVFTQDTDLVVWGDYIDEHARILIMIEVERVYSGIESFFCLKGTLATISRNSHCLLLIECPRYIKAARVTKYEMARRQPWPITLRSKKVWPGGAPRAAGSPQASQSGIDERIFMSPFQKTIKVNGLSTIWCYLHPSRTGWLYCHAWNGNARCVITSARHRQVACEPATRHERRVYRVILVRPRPIGCVVPQVVRSVSSVYVSVTGHSNVRRPATPALSVSGSLSLRLHPARNGAILLCLHSYEMRGAIQPLStop\n"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "import json\n",
    "def load_translations(csv_file):\n",
    "    translations = {}\n",
    "    with open(csv_file, 'r') as file:\n",
    "        reader = csv.reader(file)\n",
    "        for row in reader:\n",
    "            translations[row[0].strip()] = row[1].strip()\n",
    "    return translations\n",
    "# Input RNA strand\n",
    "rna_strand = input(\"What is the Strand?\")\n",
    "\n",
    "# Dictionary for codon to amino acid translation\n",
    "mydict = load_translations('dictionary_rna.csv')\n",
    "\n",
    "# Function to translate RNA strand\n",
    "def translate_rna(rna_strand, codon_dict):\n",
    "    # Initialize an empty string for the translated sequence\n",
    "    protein_sequence = \"\"\n",
    "    # Iterate over the RNA strand in steps of 3\n",
    "    for i in range(0, len(rna_strand), 3):\n",
    "        # Extract the current codon\n",
    "        codon = rna_strand[i:i+3]\n",
    "        # Translate the codon and add to the protein sequence\n",
    "        protein_sequence += codon_dict.get(codon, \"\")\n",
    "    return protein_sequence\n",
    "\n",
    "# Translate the RNA strand\n",
    "protein = translate_rna(rna_strand, mydict)\n",
    "clean_text = protein.strip()\n",
    "with open(\"Output.txt\", \"w\") as text_file:\n",
    "    print(f\"{clean_text}\", file=text_file)\n",
    "# Print the translated protein sequence\n",
    "print(protein)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "14f18722-4a87-46b8-989f-fdc83c250483",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "What is the Strand? AUGAGUCGAUUUGUACAUCAAUGUCUGCCUGCACUUGUUGUCUUAGAUACUGUGCGGCUCGCUUAUUUGCUCCACAGGAGGCAUUUCGUAGCGGGGAACCACGGUAGGAAAGACUUUCGCCGAGCCUCUCGUAUCAUGAUUUGUAGCUACAAAGCCACUCUAGAAUCAGGACUAGCUCAAGGUGGGGAUAUAGUACUACGAUCUAGUGACAAUACAUCGGAGCCUGGCUUCUUCUUGAGCCAGUCUGCCUUGACUUCUCUGAGGAGAACUUUACAACUCCGAGAAGCAAGGCAAUGUAUAACCCGGAGGCAAAAGCGUGCACGCAACUGGUAUUAUUCGUCCUGGAGUACGCCAAUGAUUCCCAUUACGACGAAAGCCACCAAACACUUAGACCCUCCGAGGCUUAGAGGGUCGCGGAUACAAGGGUUAGCUGCAUCCCAGACAACUACUAACGUGAGCCGGCAAUUGCAUUCUUCUGGAAACUUUGGAGGGAACGAAAAAGGUCAAAUUAUCUUUACUUUGUAUCCAUUUAGAUUACACCCACGGAUAUGGGAGGUGUCCUUGAAGAACGCAGUCCGACCGUUUAAGCGGCUCAGAACGUCUCUAACCCACAACGACUCAACACGAGAUGCGCAGUGGAAGAGUCCUACCGUAUUACGUUUCGUAACCCUUGCAUAUUCCAGGGGCGUUAAAUCAUGCGGGGAUCUGCAUACCCACUGGAGUAAAGAAGUAGUGUUCAAGUUAGGGUUGGUGGCGUUCGAAACAACUCGUGCCCGUCAAGCAGCAAGACCUUCAUACCUGAUCAUGAUGCUAACGGUCCUACUGGAUGAUCCAGAUUUCCGACUAGAUUCAUCUCAUGCAUCUAGACUCUGUAGUGGAUCUUUUCUACGACCGAAUGGACGGGCUCCUCCGGGUAUUAGAUGUAAGUUUUCAUUAGCACCGCAGCCUUUAUGCGGCAGAAUACAGAACGUGAUCGCUUCAUACUCUUUCGUUCACGGAGGCAAGAAACGUGACAUGCUUGAGUGGGCUUUUCGGACGGCAGAGGACCAUAGGGGACUGCGCGUCCAUAAAUUUGAUUCACGGAUAUGUCGCCAUACAGCUCAUGGUGAAUUAUCCUACUAUUUCCGCCCGUUAUUUCCAAUGUUCCUCCCCAUACCAGGGCAGCAGAUAAUUAGAUCGCCCGGCCAUUAUAUAAGUCCCUUAGGUAUCUCGACAGAGCGACGGUCGUACCCCCGGCAGUAUGUGCAGAGAUAUCAUGGAACACCUGGGCCUUAUAGAAGCGGCAGCCAUUACGCUCGGGUGUGGAUGCGAGCUAUCAAAGGAAAUACUUUCCGAUCCAAUAAAGAUACGUGUCGUCGUGGCGGAAACUCCUCAGUAUAUUCCGCACUGCACCAUGUUGGUGGUAGCACCGGUCUCAACGAGUGGAGAUUUUCAAGGCACCUUCGGGAGAAUCUAUGUAUCGUUCUCAAGACACCUCUUCCGUACCCCAGAAUCUCACCACGGUGUGGCCUAGCACCAGGAUACAUACUACGUAGUGGAAUUGUGAACAAUUGUGUGUGGAGUCCUCAAUCCACACUAGUGUCCUUCCGCACCAUAUCUCACUUAGCGUUCACAUUCAUUGAAUUGCUCUAUCAUCGGGCCGAAAAGAGCUUACGACAUAGAGUAGAUUCGACUAAGAAUCGUGCGGCUCUCGCACCUCAAUCAACAGAAAAGUUAAAUGACUCUAUAGUUCCGCAGAAAUCGACUCUCCGACCGCCCGUCAAGGGGAGCCAAGUGUUGAGAAUGAUCGGUCUAGACGGUAGUUUUUACGUGCCGGCGAAUCGGGGAGGCUACUUUAAGACAGAGAGGGCCCGGGUAGGCGACAUGCGAAAGAGACCGAUGGCUGUUCGAGAUUGCCACCUACUGUUGAGGCUACUCACCGACUGCAGUGCUGUCUUAGGAGAGCAUAGAGAGCCAGCAGGGCACAACCUCGUGAUAGCCGACCCGCCAGCCAGUUCAGACCAAUACAACAGCUUACGGGCGGCACAUUGCUUGUUAACGAAGAAGGGACCAGGCGCUAGUAGCGGGCAGAAAGCUAGCGAUCAACCUAGGUUUCCUAAUUAUCUAGUAUUGACUGAUAUACAGGCGUCUAGUUCGGGAGAUGGUGGCCUGUCAACGAGGUCACGUUACUGGUUUCUGUCUAUCCGCAGAUUCCAUGUGGGUACUUGUUAUAUCACGGGUACUAGCGCCUCGACAGACGGCGUGCGACAUCUUAUCGGAGAGUUUUAUCUCCAACUAGAAAGAAACAGUGCUUCAGAUCGAUUAACCACAGCCAGGACGUUUUGGCCUAGUGCGCUGGCGUUCCAUAGAAUUAUUAUAGUCCUCGCCGCAGGAACCCGUUCUCGGUUGAAUCAGAAGGGAUGGAAGUCGACCGUAAUAGAUACGUCGGGAUACCCUCGACUGCGCCAAGGCACUGUCCGAGGAAGCCCCCGUCCGUCAGAUGACACCGAAGUAGGACCCUCAAUGAAUUUCCUCCAGGCGAUAAAGGAGAAUUUGUCGCGGGCUGCCGCUAAACCAGCUUGCGUCCAAAAUCCCCCCACAGGAGUUUUAGUGGCCUCUCAUUCACAAUUGCAGGUACCCACCGAAGGGCGUCGCCAAUCUAAGUCUUUGCAAUUCUCACUUUCUCGAGGACCGCCUCCACCGCUUCAUGCGCUGGGCGACCUCAGCCCGGAGAUUGAUGUUAUUCUCGAGGGACGGGAAGGACUUCAUGCGCUAAGUGAUGACUUAGAAGCGAAGCGCGUUCUGAUCAAGUCAUUCAGGCGGAGUAUUGGUCGAUCAUUUUGGGUCAGCUUGUUUUUUACGUUUUUUUCGCAAAAGGCUACUGCGUGGUGGAUGAGCCGUUGGUUUCGUAAACUUAAUCAUAACUACAGAACUUUCGAGCGCACUCGGUGUCCGCUGAAGGUAGAGGACUUAGCUAACACAAGUUCAACGCGGUCUCUUUACAGUGGCGGAUUACCCGUAAUACUGUAUGAUGUACUCAGUGAUUCGUCGCUAAGACACAGGUACAAAGCUUAUCCACGACUGCGGCCGGGUCUAUCUUCCACUAUUCAAGCAACGGUUGACCUCCUGGAGCGUCGCCUCUGCCGGGUCGAAGUUUUCGAAAUUGCGCGGGACAGUUUGUUGCACAUGUAUAUUUUUGGUGGCUCCGACCCAUUCCCUCGCCAACAGAGGGACGAUUACAGGGCCGGUACUGCACUAAGGGCGCUCGAACCUGCCCCCGAUCGCUGGCAGGCACAUUUAGAAAGUUCACUCCAAAUGGUUCCUCUUCCGGUACUUCUCCUCCUUGUCAAGCCUAUCCCCAAUGUGGCAUGGCGUCGGCGUGCUGUUUCGUCGGCUGGGGCAACUGACAAUGAAUCCUAUUGUAGCUGGUCGGAGCAAUCCCUACCGCGCGCUGUCCCGCCUAUCUGCCUGCAAACUCAUCUAACAGCUCUUCGUGAUCAAGUGCGGCAUCCGUGGUUCUAUCCGUGCGUCCCAGUUGAGGUUUCAUCCGGCUUGCUAUGGGUUUGUUUACGUCUGGACGUGGUUCUCCACAGGCGAUACGAGUCAAUUUUAUCUUCGAAUAUCUUGAGCUGUGGCUAUCACAAGACUAAAGAUCUUCCAUCAUAUCACCUGCAUGCGUGUCGACUGGCUGCCGGUGGUGUAUUCCUACCGCCGUAUCAAGAUAACGCCGAGUGGGAAAUCGACGUCUUCGUUACCUUACACUGUGUCUGUCUUGCUGAAACGGAUGCCAAAAGAGAUUCGAGUAUCCGCUUGCUUGGUAGCCUACGUCAGAUCCUGGCGUGUUGGAAUAGGGCUUUGCCGAGGUGGAUAUGCUACCCGCAAUCGGAGUAUCAGCGGACGUGUGUAGUUGAUCGUGAUGUAGCCCAAGGAAAAACUCGCAGAUGUACGAGACACCGUUCAUGGAGUCAGCCUCGCUGGCUUCAAUUGCACUUCUCGAGUGAAAAUCUGGCGCUUCAGGUUGUAGGGCGCUGUGAUAUUUGGCGAUUCGCACGGUUACCGCUAGGGUGCGCGAGCUGGGGUCGCCAAAGGCUAUCCGGUCGGAAUUUCCCUCUCGUUGCACGUUGGUCAAUAAUCAUCGCGGUUCGAAUUCCAGCGACGAGAACGUAUUUCAUACGCUUGUACAGUACUGUUAUAUCGAUCUCUACUCGAUCUAGGUACGGAUUCCCCUACUGGACUCGUUACGGUUUUAGACGCGUGGGUACACAGAAUACUCGUGUAAAGAAAACUUUUGGAAUCGGUUGCGAAAGACUAAAAUCAUCGUGGGAUACUUGGUGGCUGGUCGCGUUAUCGUCUGAACAUGUCCUUCGGUCGGAUCGCUCAGAGCCCAUGAUCUAUGAACAGUGUAAGGAAUGUUUAAGGGACUGCUUGAGGAACUUAGCACCUAACAUACACCUUUACAAGCGUCGUUGCAAUAGACCCCGCACAAUUCGCGUGCCGAGCCUUGGACACGGUGGUAACAUCUCCAAAAAGGAUCCCCUAUGCCGUGCCACGAAACGGUUGGAUAUGUAUGAUCGCAUGUUGGCCAUCGAAAAUGUUUUGAGGGGGUCACAAUUGAUUUAUACGGCUAGCUCAAGGAAAUUUACUAUAAUCGAUCACGGGAAUCUCUUCGACUGUGAUAAUGGCCCCCGCUGUUGCACGUACUAUCUGGGGCUUCGAAAAUUAUAUUCAAAAGUGUUCCCAACGUUCCCAGGCUGGACCACACUGGCUUGUCAGUCCCCCGAACCUACGCUCGAGGCCCUGAAGAAGGAAAGAAGGCCCUACACGAUGAAGCAACGGGCAGUCCCUAGAUUAGUCCCAAAUUCAUGCCGUCCCCUUGGAGCAACCUGCUAUAUUCUGGCUAAUUGGAUUCCAGCGCUAACCCUCCGGGUGCUCUCCCCCAGCGAAAGUUCUCGGCCAAUUAAGGCAGAGUUACCACUACUAAAGUACAGACAAAAGGGGGUGAUAAGAUACGCCCCCGCAAGAAAUCGGAUCGACGAUCACGAAUGUCAACCAAGCAUGAGCGGACAGGGCUGCCGCGUUCUUGCCAUACGCGUUAUAGUUUGUGUGUUUGCGUUUGGAGUCCACAAAUUCUUCAAGGUGCGUCACGCAUCCGGGACCAUUGAUGGACCAUCAAUAUCGAGCUUAGAUAGGUCGAUCGACAGCCCUGAGCUUAUUUCUCUUCUGGGGGUCAAUCCAGUCCGGCAUUGCAAGAUUUCCUCCGACGGCGAGGGCACGGCUGGCCCUGUACCGUAUUCUACCCGUCUUCCAGGAUGUCGUAGCGUGGGCCAUAUAGUGUCGAGGAGGGCCGCGCUUAGACGCUAUACCGCAUCAGAUGCGUACCAGAAAAAUUGGAGCUCGGUGGCGUAUGUCUUGCUAAUAGGGCAGCCGGAGAAGGUCGAUACGGCACCCUUCUCCUUUUCUUGGCUUGUUUUCAUCCGUAAUCGCGCGUACCGGGCGCGAGUGCUCCAGUGUAAAUUUGCGCCUAGACUCACCCCGAAGGAAAAAGUGCUUGUGCAGUCACACCGCGCCUGGUUUAAAAUCCGCAAGCUCGGUGUUCACAGUAUUUCGGUUCUCUACCGCCUGAUGCCAGUGCACCUUACUGAUCAGUGCGCGUGUGUUAUAUGCCACCUGAGGGCGAUGCGCCGUUCAUUUAGGGGCGUCCCUUACCCGACUCAUGCUGCACUAAGGCGCGGAGAUGGUGGUAUUUGUCUUUUUAAUAGCCUAGGGCAUGCGUCCACGUCCGAACAUAUACCUUUCCACUAUGUAGUCCCUGGAAAGGCUUUAAAAACACCAGGGUCUUUCAAAUGGCCACUAGGAAUUAAACAUCAGUGGAAAAUUUACGUCCGACCUUCCAAAGUGUCCUGGAAACGCCAAUGCUCACGACACGUAGUAACCGGGCCAGAUACUCCCACUGUGGUGCGUUCGAGACGGAUUACUUUCGGAAACCGCAAGAUGAGCUACGAAUGGUGUAUCUUAUUAGUCAAGCGCACUUAUGUACCUACCUCGCCCAGCUCUACGUCUGGUAACCGAUUGCUUUACCCCCGGGUACUGCAAUUAAAACGUUCAACCCAGAUGCUCUGUGACAUUAUUAGCGCCGUACUAUGGUUUAGCUCAGAGACACUUCUUACCGAUAGCAUGAAUUCGGACAUUGUGGACUAUCCGUUGUUAUACGGGCGUUUCGUCUACAACUCGACGGGAGUGUAUUCUAUAAUCAGGCCUGCCAGCUUCAGCCCGUUGCGCGAAAUGGAACAAGAAUUAUUUUCGAGAAGUAGUUCUGCCAUUUCCAACUAUACAGUAGUUAUCUUUAAUAGCGAAGUACACUCUUUGAACAGACGAACAAUGCCAUCAGCCUCGGUACAGGUUAACUUUGUCGGCGGUGUUUCCUCUACGGGUAUUAGCGACACACUAGCUAGAAGGGCCCCGGCCUGCCGAGGUUGUGCCGUGCUUCAUGCAGGGGAGCCGCAUGGACGCACUCUUAGCCGCGCGCAUGCCGUAUGCCUAAUUCCACGUUUAGUACCUAUUCUUGACCCGAACCCGAUAGACCUUACGCAAUAUUUGCUUGCUAUUAUACGCAUACCUGCGUCACGCAAGAGGGAGGGGGAAUGUUUAGUAGUCUCCGUUCCAACAAUACGGACUGUCUACCACAUUAUCGCUUUUCUGGGACUAUGUCGCUGUUGUACUCUGCGAGUCGAGUUAUCAGUCGUAUUUGUCUCCCUAAGGGCGUGUAAUAAAUGGUGCUAUCCUACGAACCAUGAUCGCAAUGUACAGCCAAACACACCCUGUGAUGCAUACUUAACUGAUUCUUGGUCUAGCUUACAGGCAAGUUGGCUAAGUUAUCGAAAAGUCAUCGUGAGGCGAGUCAGAGUCCCCCGCGGAUUAAAGUGGUUUGAGAGCUCCUUUGGAGAUCUCGCCUCUUUCAGUUCUAAUAUACUCCUCAUCAUUCCAGAGCCUGCACCUCGCAUCGCGCGCUGGCAGUACGACGUAGGAGCGGGGAUUGAUCACACGGCUAAGGUAAUGAGGAUCAUAGGUGACGAGGCAAGCGGCGACUGCAGUAGUAACUCCAAUGUAUGUCGUCUAUCACACUUGAAGACCAGGCCUACAGGACUACGGAGUUCACAAUUGCGCCGACCUAUUAUAUGCGUACAUGGGCCGACAAAGGAGGGAAUCUCGGGAAUAGCAACCAAGCUGAGCACUUGCUAUAUCAAAUGCCUGGAAGGAACUGCCGAGGUUCAGUUAUCUUCCUGGCGGAUUACGGAGCCUGAUGCUGGUGUGUUGGCGGCUACGGGAGCGAAUGAAACGUCUAGUGCUCCGACCGACCCUUCUAAUAUAACUUGUGAUGUCAUAUGCCUGCAUGUAUCACCUGUAUCUAUACCGAGUUCUGUGAGUCGGGGAAGGGCAAGACCGGUGGAUGGGACCUAUAGCCGGUUCGACCUAACUAUGGUUCCCACCACAGAACUUGUGCUUAGUACCCUUCGGUGUCUUUCCGGCAUAGCACGAGCUGGCGAGCUCUGGAUCGGGCCUCUAAGGUUAGGGCUGUCAUACUCGAAAUCACGACACCCGGUACAAUCUGGAGGCGGACAGGAGACUGUUUUGCGUAAGCCCACUGCACCUUGCAUGCGCGUCGACGUAUGCUUUCAAUGUAAGCUAAGGAUUCGAGUGGAAGCAUGGUAUCGCAAUAAACGAAGGGUAUUAGUCCGCAAAUCACUGGGUAUAUCCAAUAAUAUAGGGAAUAGCCGUGGUCGAAGAGGUGGUGUGAUGGAAUUGAUCUGGCGAAUGUGGUCGUCGCUGUUGAGCUUUGGAAUACCCCAUUCUUCCAUAACUCAAACUUUCACGGAGAGCCCGGAGCCUGCAGCACGCUUCGUGACGUUCUACUCUUCAUUUAGCCAACAUCACAAGUCUGUCAACGAUGCCUUUGGCGAAUACUGCGCGCUCGUGACCGACCCCCCUAACGCACCGGUCAGUGCAGUACAGUGGCUCGAGUCAUCCCUGUCAUUAAACAGUACAGAGAAGAGGCACUAUCUCAUUGGAAAUUCGUUGUGUGGUUUUUUAAACACCGUUAUUAGGGUCCCCACAGUUACCACCUUGUCGACAUUCCCUCAGAACCUCGGAACCCAAGAGGAUCAGGACAAUAAAUCCAAUCCACGCAAAGACUCACCUGUGAUCAUAAGCCACCCCCGACAAGGGGUUUUGCAGCUACCAUAUGUAACGAGUUCACCGAAUACCCGUAUGAUACAUAGCAUAGCUAAAGCAGCACUUACUUCGCAUUCCAAGAGAGGAUAUCCCUUAUUCCCCAAUUUUUUUAGAUUCACUCAUUGGUCAUUAAAUGAUGAACCACCAAAACAAGUUAAAGUGUGGAGUCAAGAAUUGGGACAUUGGGUAGAUUCGUUGUACCCCAAUGUCCUGGGCGAGUCACAAGUCUUAAGCCCCUGGCCCAUCGGAGAGCUUUUCACCGCAAGUUUGUAUCGGCGUCACCAUAUGUCGUCGCCUGAUUUGGGUCCGAUAUCUCGCGGGACAAUUUUAUGCGUGCCCUUUGAAGAACUAGCUUGGAGUCCGCAGCUAUCUAAGACUUCACCCCGGUCACCUUUCACCGAACCGUCGCCGAAAGCAGAAGUUAGUAUUAUCAUGACUGCUAUUAACGACUGUCCUCCCUCAGUCCUCAAUAUGCACUUAUUCCACUUUCCGGGCCGAUACGCACCAAUGCAUUUCACUCUGUCAGCUGCGAGCAAUGGACGUGGGCCGGUUUCUAUGUUCACCCGUAUUGCUUGGGAUCUACCUAAGUUUACUCACAACACUCCCAGAUACAACCGAGUAUCUUAUACGCGAUUCCGAGGUCCCGGAAUUAAACGACGUCAGCGCGGCCCUUCAUCGGCCGUCCCGAAGAUUCGUCACUUCGCCGCAGGCUCAACGAUCCGAGCUACAGGCCUUAGGUCCCAUGACAUUUGUCUCAUCCCCGUACGGCCUAUCGCAUACUAUAUGCACGCCCAGGAUAAGUAUCCGCCGGGUGACGAAAGGUGGUUAGAGCACACCAAAGACAUCGUGACUAUGAGCGUUGUGGCCGGGACGAUUCGGUUUAAAUUGCUCAGUUGUAGCAGGCGGAGGGUGGGGCUUCUCACGUUGUCCCGCGAUUUUACCAAGAGGAAGUGCCACCGUGGAAAGAAAGCUGGCACGUAUAUCCUACCCUCUUCUCAAGAUCAAAGAAGACCGGGAUCGGACUACUGA\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Translated Protein Sequence: MSRVHQCLPALVVLDTVRLAYLLHRRHFVAGNHGRKDRRASRIMICSYKATLESGLAQGGDIVLRSSDNTSEPGFFLSQSALTSLRRTLQLREARQCITRRQKRARNWYYSSWSTPMIPITTKATKHLDPPRLRGSRIQGLAASQTTTNVSRQLHSSGNGGNEKGQIITLYPRLHPRIWEVSLKNAVRPKRLRTSLTHNDSTRDAQWKSPTVLRFVTLAYSRGVKSCGDLHTHWSKEVVFKLGLVAFETTRARQAARPSYLIMMLTVLLDDPDFRLDSSHASRLCSGSLRPNGRAPPGIRCKSLAPQPLCGRIQNVIASYSFVHGGKKRDMLEWARTAEDHRGLRVHKDSRICRHTAHGELSYYFRPLPMFLPIPGQQIIRSPGHYISPLGISTERRSYPRQYVQRYHGTPGPYRSGSHYARVWMRAIKGNTFRSNKDTCRRGGNSSVYSALHHVGGSTGLNEWRSRHLRENLCIVLKTPLPYPRISPRCGLAPGYILRSGIVNNCVWSPQSTLVSFRTISHLAFTFIELLYHRAEKSLRHRVDSTKNRAALAPQSTEKLNDSIVPQKSTLRPPVKGSQVLRMIGLDGSYVPANRGGYKTERARVGDMRKRPMAVRDCHLLLRLLTDCSAVLGEHREPAGHNLVIADPPASSDQYNSLRAAHCLLTKKGPGASSGQKASDQPRPNYLVLTDIQASSSGDGGLSTRSRYWLSIRRFHVGTCYITGTSASTDGVRHLIGEYLQLERNSASDRLTTARTWPSALAFHRIIIVLAAGTRSRLNQKGWKSTVIDTSGYPRLRQGTVRGSPRPSDDTEVGPSMNFLQAIKENLSRAAAKPACVQNPPTGVLVASHSQLQVPTEGRRQSKSLQFSLSRGPPPPLHALGDLSPEIDVILEGREGLHALSDDLEAKRVLIKSFRRSIGRSWVSLTSQKATAWWMSRWRKLNHNYRTFERTRCPLKVEDLANTSSTRSLYSGGLPVILYDVLSDSSLRHRYKAYPRLRPGLSSTIQATVDLLERRLCRVEVFEIARDSLLHMYIGGSDPFPRQQRDDYRAGTALRALEPAPDRWQAHLESSLQMVPLPVLLLLVKPIPNVAWRRRAVSSAGATDNESYCSWSEQSLPRAVPPICLQTHLTALRDQVRHPWFYPCVPVEVSSGLLWVCLRLDVVLHRRYESILSSNILSCGYHKTKDLPSYHLHACRLAAGGVFLPPYQDNAEWEIDVFVTLHCVCLAETDAKRDSSIRLLGSLRQILACWNRALPRWICYPQSEYQRTCVVDRDVAQGKTRRCTRHRSWSQPRWLQLHFSSENLALQVVGRCDIWRFARLPLGCASWGRQRLSGRNFPLVARWSIIIAVRIPATRTYFIRLYSTVISISTRSRYGFPYWTRYGRRVGTQNTRVKKTGIGCERLKSSWDTWWLVALSSEHVLRSDRSEPMIYEQCKECLRDCLRNLAPNIHLYKRRCNRPRTIRVPSLGHGGNISKKDPLCRATKRLDMYDRMLAIENVLRGSQLIYTASSRKTIIDHGNLFDCDNGPRCCTYYLGLRKLYSKVFPTFPGWTTLACQSPEPTLEALKKERRPYTMKQRAVPRLVPNSCRPLGATCYILANWIPALTLRVLSPSESSRPIKAELPLLKYRQKGVIRYAPARNRIDDHECQPSMSGQGCRVLAIRVIVCVAGVHKFFKVRHASGTIDGPSISSLDRSIDSPELISLLGVNPVRHCKISSDGEGTAGPVPYSTRLPGCRSVGHIVSRRAALRRYTASDAYQKNWSSVAYVLLIGQPEKVDTAPFSSWLVFIRNRAYRARVLQCKAPRLTPKEKVLVQSHRAWKIRKLGVHSISVLYRLMPVHLTDQCACVICHLRAMRRSRGVPYPTHAALRRGDGGICLNSLGHASTSEHIPFHYVVPGKALKTPGSFKWPLGIKHQWKIYVRPSKVSWKRQCSRHVVTGPDTPTVVRSRRITFGNRKMSYEWCILLVKRTYVPTSPSSTSGNRLLYPRVLQLKRSTQMLCDIISAVLWSSETLLTDSMNSDIVDYPLLYGRFVYNSTGVYSIIRPASFSPLREMEQELSRSSSAISNYTVVINSEVHSLNRRTMPSASVQVNVGGVSSTGISDTLARRAPACRGCAVLHAGEPHGRTLSRAHAVCLIPRLVPILDPNPIDLTQYLLAIIRIPASRKREGECLVVSVPTIRTVYHIIALGLCRCCTLRVELSVVVSLRACNKWCYPTNHDRNVQPNTPCDAYLTDSWSSLQASWLSYRKVIVRRVRVPRGLKWESSGDLASFSSNILLIIPEPAPRIARWQYDVGAGIDHTAKVMRIIGDEASGDCSSNSNVCRLSHLKTRPTGLRSSQLRRPIICVHGPTKEGISGIATKLSTCYIKCLEGTAEVQLSSWRITEPDAGVLAATGANETSSAPTDPSNITCDVICLHVSPVSIPSSVSRGRARPVDGTYSRFDLTMVPTTELVLSTLRCLSGIARAGELWIGPLRLGLSYSKSRHPVQSGGGQETVLRKPTAPCMRVDVCQCKLRIRVEAWYRNKRRVLVRKSLGISNNIGNSRGRRGGVMELIWRMWSSLLSGIPHSSITQTFTESPEPAARFVTFYSSSQHHKSVNDAGEYCALVTDPPNAPVSAVQWLESSLSLNSTEKRHYLIGNSLCGLNTVIRVPTVTTLSTFPQNLGTQEDQDNKSNPRKDSPVIISHPRQGVLQLPYVTSSPNTRMIHSIAKAALTSHSKRGYPLFPNRFTHWSLNDEPPKQVKVWSQELGHWVDSLYPNVLGESQVLSPWPIGELFTASLYRRHHMSSPDLGPISRGTILCVPEELAWSPQLSKTSPRSPFTEPSPKAEVSIIMTAINDCPPSVLNMHLFHPGRYAPMHFTLSAASNGRGPVSMFTRIAWDLPKTHNTPRYNRVSYTRFRGPGIKRRQRGPSSAVPKIRHFAAGSTIRATGLRSHDICLIPVRPIAYYMHAQDKYPPGDERWLEHTKDIVTMSVVAGTIRKLLSCSRRRVGLLTLSRDTKRKCHRGKKAGTYILPSSQDQRRPGSDY$\n"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "\n",
    "# Function to load the codon-to-amino-acid dictionary from a CSV file\n",
    "def load_translations(csv_file):\n",
    "    translations = {}\n",
    "    try:\n",
    "        with open(csv_file, 'r') as file:\n",
    "            reader = csv.reader(file)\n",
    "            for row in reader:\n",
    "                translations[row[0].strip()] = row[1].strip()\n",
    "    except FileNotFoundError:\n",
    "        print(f\"Error: The file {csv_file} was not found.\")\n",
    "        return None\n",
    "    except Exception as e:\n",
    "        print(f\"An error occurred while reading the file: {e}\")\n",
    "        return None\n",
    "    return translations\n",
    "\n",
    "# Function to translate RNA strand\n",
    "def translate_rna(rna_strand, codon_dict):\n",
    "    # Initialize an empty string for the translated sequence\n",
    "    protein_sequence = \"\"\n",
    "    # Iterate over the RNA strand in steps of 3\n",
    "    for i in range(0, len(rna_strand), 3):\n",
    "        # Extract the current codon\n",
    "        codon = rna_strand[i:i+3]\n",
    "        # Translate the codon and add to the protein sequence\n",
    "        if len(codon) == 3:  # Only translate complete codons\n",
    "            protein_sequence += codon_dict.get(codon, \"\")\n",
    "    return protein_sequence\n",
    "\n",
    "# Input RNA strand\n",
    "rna_strand = input(\"What is the Strand?\").strip()\n",
    "\n",
    "# Dictionary for codon to amino acid translation\n",
    "mydict = load_translations('dictionary_rna.csv')\n",
    "\n",
    "if mydict:\n",
    "    # Translate the RNA strand\n",
    "    protein = translate_rna(rna_strand, mydict)\n",
    "    clean_text = protein.strip()\n",
    "    \n",
    "    if clean_text:\n",
    "        # Save the result to a file\n",
    "        with open(\"Output.txt\", \"w\") as text_file:\n",
    "            print(f\"{clean_text}\", file=text_file)\n",
    "        # Print the translated protein sequence\n",
    "        print(\"Translated Protein Sequence:\", clean_text)\n",
    "    else:\n",
    "        print(\"No valid codons found in the provided RNA strand.\")\n",
    "else:\n",
    "    print(\"Translation dictionary could not be loaded. Please check the CSV file.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3d7877e8-d81d-43d4-abaf-4d90fb4e530f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MSRFVHQCLPALVVLDTVRLAYLLHRRHFVAGNHGRKDFRRASRIMICSYKATLESGLAQGGDIVLRSSDNTSEPGFFLSQSALTSLRRTLQLREARQCITRRQKRARNWYYSSWSTPMIPITTKATKHLDPPRLRGSRIQGLAASQTTTNVSRQLHSSGNFGGNEKGQIIFTLYPFRLHPRIWEVSLKNAVRPFKRLRTSLTHNDSTRDAQWKSPTVLRFVTLAYSRGVKSCGDLHTHWSKEVVFKLGLVAFETTRARQAARPSYLIMMLTVLLDDPDFRLDSSHASRLCSGSFLRPNGRAPPGIRCKFSLAPQPLCGRIQNVIASYSFVHGGKKRDMLEWAFRTAEDHRGLRVHKFDSRICRHTAHGELSYYFRPLFPMFLPIPGQQIIRSPGHYISPLGISTERRSYPRQYVQRYHGTPGPYRSGSHYARVWMRAIKGNTFRSNKDTCRRGGNSSVYSALHHVGGSTGLNEWRFSRHLRENLCIVLKTPLPYPRISPRCGLAPGYILRSGIVNNCVWSPQSTLVSFRTISHLAFTFIELLYHRAEKSLRHRVDSTKNRAALAPQSTEKLNDSIVPQKSTLRPPVKGSQVLRMIGLDGSFYVPANRGGYFKTERARVGDMRKRPMAVRDCHLLLRLLTDCSAVLGEHREPAGHNLVIADPPASSDQYNSLRAAHCLLTKKGPGASSGQKASDQPRFPNYLVLTDIQASSSGDGGLSTRSRYWFLSIRRFHVGTCYITGTSASTDGVRHLIGEFYLQLERNSASDRLTTARTFWPSALAFHRIIIVLAAGTRSRLNQKGWKSTVIDTSGYPRLRQGTVRGSPRPSDDTEVGPSMNFLQAIKENLSRAAAKPACVQNPPTGVLVASHSQLQVPTEGRRQSKSLQFSLSRGPPPPLHALGDLSPEIDVILEGREGLHALSDDLEAKRVLIKSFRRSIGRSFWVSLFFTFFSQKATAWWMSRWFRKLNHNYRTFERTRCPLKVEDLANTSSTRSLYSGGLPVILYDVLSDSSLRHRYKAYPRLRPGLSSTIQATVDLLERRLCRVEVFEIARDSLLHMYIFGGSDPFPRQQRDDYRAGTALRALEPAPDRWQAHLESSLQMVPLPVLLLLVKPIPNVAWRRRAVSSAGATDNESYCSWSEQSLPRAVPPICLQTHLTALRDQVRHPWFYPCVPVEVSSGLLWVCLRLDVVLHRRYESILSSNILSCGYHKTKDLPSYHLHACRLAAGGVFLPPYQDNAEWEIDVFVTLHCVCLAETDAKRDSSIRLLGSLRQILACWNRALPRWICYPQSEYQRTCVVDRDVAQGKTRRCTRHRSWSQPRWLQLHFSSENLALQVVGRCDIWRFARLPLGCASWGRQRLSGRNFPLVARWSIIIAVRIPATRTYFIRLYSTVISISTRSRYGFPYWTRYGFRRVGTQNTRVKKTFGIGCERLKSSWDTWWLVALSSEHVLRSDRSEPMIYEQCKECLRDCLRNLAPNIHLYKRRCNRPRTIRVPSLGHGGNISKKDPLCRATKRLDMYDRMLAIENVLRGSQLIYTASSRKFTIIDHGNLFDCDNGPRCCTYYLGLRKLYSKVFPTFPGWTTLACQSPEPTLEALKKERRPYTMKQRAVPRLVPNSCRPLGATCYILANWIPALTLRVLSPSESSRPIKAELPLLKYRQKGVIRYAPARNRIDDHECQPSMSGQGCRVLAIRVIVCVFAFGVHKFFKVRHASGTIDGPSISSLDRSIDSPELISLLGVNPVRHCKISSDGEGTAGPVPYSTRLPGCRSVGHIVSRRAALRRYTASDAYQKNWSSVAYVLLIGQPEKVDTAPFSFSWLVFIRNRAYRARVLQCKFAPRLTPKEKVLVQSHRAWFKIRKLGVHSISVLYRLMPVHLTDQCACVICHLRAMRRSFRGVPYPTHAALRRGDGGICLFNSLGHASTSEHIPFHYVVPGKALKTPGSFKWPLGIKHQWKIYVRPSKVSWKRQCSRHVVTGPDTPTVVRSRRITFGNRKMSYEWCILLVKRTYVPTSPSSTSGNRLLYPRVLQLKRSTQMLCDIISAVLWFSSETLLTDSMNSDIVDYPLLYGRFVYNSTGVYSIIRPASFSPLREMEQELFSRSSSAISNYTVVIFNSEVHSLNRRTMPSASVQVNFVGGVSSTGISDTLARRAPACRGCAVLHAGEPHGRTLSRAHAVCLIPRLVPILDPNPIDLTQYLLAIIRIPASRKREGECLVVSVPTIRTVYHIIAFLGLCRCCTLRVELSVVFVSLRACNKWCYPTNHDRNVQPNTPCDAYLTDSWSSLQASWLSYRKVIVRRVRVPRGLKWFESSFGDLASFSSNILLIIPEPAPRIARWQYDVGAGIDHTAKVMRIIGDEASGDCSSNSNVCRLSHLKTRPTGLRSSQLRRPIICVHGPTKEGISGIATKLSTCYIKCLEGTAEVQLSSWRITEPDAGVLAATGANETSSAPTDPSNITCDVICLHVSPVSIPSSVSRGRARPVDGTYSRFDLTMVPTTELVLSTLRCLSGIARAGELWIGPLRLGLSYSKSRHPVQSGGGQETVLRKPTAPCMRVDVCFQCKLRIRVEAWYRNKRRVLVRKSLGISNNIGNSRGRRGGVMELIWRMWSSLLSFGIPHSSITQTFTESPEPAARFVTFYSSFSQHHKSVNDAFGEYCALVTDPPNAPVSAVQWLESSLSLNSTEKRHYLIGNSLCGFLNTVIRVPTVTTLSTFPQNLGTQEDQDNKSNPRKDSPVIISHPRQGVLQLPYVTSSPNTRMIHSIAKAALTSHSKRGYPLFPNFFRFTHWSLNDEPPKQVKVWSQELGHWVDSLYPNVLGESQVLSPWPIGELFTASLYRRHHMSSPDLGPISRGTILCVPFEELAWSPQLSKTSPRSPFTEPSPKAEVSIIMTAINDCPPSVLNMHLFHFPGRYAPMHFTLSAASNGRGPVSMFTRIAWDLPKFTHNTPRYNRVSYTRFRGPGIKRRQRGPSSAVPKIRHFAAGSTIRATGLRSHDICLIPVRPIAYYMHAQDKYPPGDERWLEHTKDIVTMSVVAGTIRFKLLSCSRRRVGLLTLSRDFTKRKCHRGKKAGTYILPSSQDQRRPGSDY\n"
     ]
    }
   ],
   "source": [
    "# Code on Python 3.7.4\n",
    "# Working @ Dec, 2020\n",
    "# david-boo.github.io \n",
    "\n",
    "# Load the codon table that dictates the details regarding the encoding of specific codons into the amino acid alphabet.\n",
    "\n",
    "codontable = {\n",
    "    'UUU': 'F',     'CUU': 'L',     'AUU': 'I',     'GUU': 'V',\n",
    "    'UUC': 'F',     'CUC': 'L',     'AUC': 'I',     'GUC': 'V',\n",
    "    'UUA': 'L',     'CUA': 'L',     'AUA': 'I',     'GUA': 'V',\n",
    "    'UUG': 'L',     'CUG': 'L',     'AUG': 'M',     'GUG': 'V',\n",
    "    'UCU': 'S',     'CCU': 'P',     'ACU': 'T',     'GCU': 'A',\n",
    "    'UCC': 'S',     'CCC': 'P',     'ACC': 'T',     'GCC': 'A',\n",
    "    'UCA': 'S',     'CCA': 'P',     'ACA': 'T',     'GCA': 'A',\n",
    "    'UCG': 'S',     'CCG': 'P',     'ACG': 'T',     'GCG': 'A',\n",
    "    'UAU': 'Y',     'CAU': 'H',     'AAU': 'N',     'GAU': 'D',\n",
    "    'UAC': 'Y',     'CAC': 'H',     'AAC': 'N',     'GAC': 'D',\n",
    "    'UAA': 'Stop',  'CAA': 'Q',     'AAA': 'K',     'GAA': 'E',\n",
    "    'UAG': 'Stop',  'CAG': 'Q',     'AAG': 'K',     'GAG': 'E',\n",
    "    'UGU': 'C',     'CGU': 'R',     'AGU': 'S',     'GGU': 'G',\n",
    "    'UGC': 'C',     'CGC': 'R',     'AGC': 'S',     'GGC': 'G',\n",
    "    'UGA': 'Stop',  'CGA': 'R',     'AGA': 'R',     'GGA': 'G',\n",
    "    'UGG': 'W',     'CGG': 'R',     'AGG': 'R',     'GGG': 'G'\n",
    "}\n",
    "\n",
    "# Split data by every 3 chars into an array. Compare that substring to the codons in your codon table until you find a match. Once matched, the corresponding protein letter can be added to a list or a new protein string.\n",
    "\n",
    "with open (\"rosalind_prot_final.txt\", \"r\") as input_file:\n",
    "    RNA = input_file.read()\n",
    "    prot = \"\"\n",
    "    for i in range(0, len(RNA), 3):\n",
    "        if (codontable.get(RNA[i:i+3])) == \"Stop\":\n",
    "            break\n",
    "        else:\n",
    "            prot += (codontable.get(RNA[i:i+3]))\n",
    "print(prot)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e12f6bd-81d8-4b60-91e8-c9e144be2791",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
